Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    SPACE

Grammar

Rule 0     S' -> Query
Rule 1     Query -> SFW
Rule 2     SFW -> SELECT SelList FROM FromList WHERE Cond
Rule 3     SFW -> SELECT SelList FROM FromList
Rule 4     SelList -> TCNAME COMMA SelList
Rule 5     SelList -> TCNAME
Rule 6     SelList -> STAR
Rule 7     FromList -> TCNAME COMMA FromList
Rule 8     FromList -> TCNAME
Rule 9     Cond -> TCNAME EQX CONSTANT

Terminals, with rules where they appear

AND                  : 
COMMA                : 4 7
CONSTANT             : 9
EQX                  : 9
FROM                 : 2 3
SELECT               : 2 3
SPACE                : 
STAR                 : 6
TCNAME               : 4 5 7 8 9
WHERE                : 2
error                : 

Nonterminals, with rules where they appear

Cond                 : 2
FromList             : 2 3 7
Query                : 0
SFW                  : 1
SelList              : 2 3 4

Parsing method: LALR

state 0

    (0) S' -> . Query
    (1) Query -> . SFW
    (2) SFW -> . SELECT SelList FROM FromList WHERE Cond
    (3) SFW -> . SELECT SelList FROM FromList

    SELECT          shift and go to state 3

    Query                          shift and go to state 1
    SFW                            shift and go to state 2

state 1

    (0) S' -> Query .



state 2

    (1) Query -> SFW .

    $end            reduce using rule 1 (Query -> SFW .)


state 3

    (2) SFW -> SELECT . SelList FROM FromList WHERE Cond
    (3) SFW -> SELECT . SelList FROM FromList
    (4) SelList -> . TCNAME COMMA SelList
    (5) SelList -> . TCNAME
    (6) SelList -> . STAR

    TCNAME          shift and go to state 5
    STAR            shift and go to state 6

    SelList                        shift and go to state 4

state 4

    (2) SFW -> SELECT SelList . FROM FromList WHERE Cond
    (3) SFW -> SELECT SelList . FROM FromList

    FROM            shift and go to state 7


state 5

    (4) SelList -> TCNAME . COMMA SelList
    (5) SelList -> TCNAME .

    COMMA           shift and go to state 8
    FROM            reduce using rule 5 (SelList -> TCNAME .)


state 6

    (6) SelList -> STAR .

    FROM            reduce using rule 6 (SelList -> STAR .)


state 7

    (2) SFW -> SELECT SelList FROM . FromList WHERE Cond
    (3) SFW -> SELECT SelList FROM . FromList
    (7) FromList -> . TCNAME COMMA FromList
    (8) FromList -> . TCNAME

    TCNAME          shift and go to state 10

    FromList                       shift and go to state 9

state 8

    (4) SelList -> TCNAME COMMA . SelList
    (4) SelList -> . TCNAME COMMA SelList
    (5) SelList -> . TCNAME
    (6) SelList -> . STAR

    TCNAME          shift and go to state 5
    STAR            shift and go to state 6

    SelList                        shift and go to state 11

state 9

    (2) SFW -> SELECT SelList FROM FromList . WHERE Cond
    (3) SFW -> SELECT SelList FROM FromList .

    WHERE           shift and go to state 12
    $end            reduce using rule 3 (SFW -> SELECT SelList FROM FromList .)


state 10

    (7) FromList -> TCNAME . COMMA FromList
    (8) FromList -> TCNAME .

    COMMA           shift and go to state 13
    WHERE           reduce using rule 8 (FromList -> TCNAME .)
    $end            reduce using rule 8 (FromList -> TCNAME .)


state 11

    (4) SelList -> TCNAME COMMA SelList .

    FROM            reduce using rule 4 (SelList -> TCNAME COMMA SelList .)


state 12

    (2) SFW -> SELECT SelList FROM FromList WHERE . Cond
    (9) Cond -> . TCNAME EQX CONSTANT

    TCNAME          shift and go to state 15

    Cond                           shift and go to state 14

state 13

    (7) FromList -> TCNAME COMMA . FromList
    (7) FromList -> . TCNAME COMMA FromList
    (8) FromList -> . TCNAME

    TCNAME          shift and go to state 10

    FromList                       shift and go to state 16

state 14

    (2) SFW -> SELECT SelList FROM FromList WHERE Cond .

    $end            reduce using rule 2 (SFW -> SELECT SelList FROM FromList WHERE Cond .)


state 15

    (9) Cond -> TCNAME . EQX CONSTANT

    EQX             shift and go to state 17


state 16

    (7) FromList -> TCNAME COMMA FromList .

    WHERE           reduce using rule 7 (FromList -> TCNAME COMMA FromList .)
    $end            reduce using rule 7 (FromList -> TCNAME COMMA FromList .)


state 17

    (9) Cond -> TCNAME EQX . CONSTANT

    CONSTANT        shift and go to state 18


state 18

    (9) Cond -> TCNAME EQX CONSTANT .

    $end            reduce using rule 9 (Cond -> TCNAME EQX CONSTANT .)

